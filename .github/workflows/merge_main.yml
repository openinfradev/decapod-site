# This is a basic workflow to help you get started with Actions

name: GenerateYaml

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      baseUrl:
        description: 'Decapod base yaml repository URL'
        required: true
        default: 'https://github.com/openinfradev/decapod-base-yaml.git'
      baseBranch:
        description: 'Decapod base yaml repository branch or tag'
        required: true
        default: 'main'
      manifestTargetUser:
        description: 'Decapod output manifests target repository owner'
        required: true
        default: 'openinfradev'
      manifestTargetRepo:
        description: 'Decapod output manifests target repository name'
        required: true
        default: 'decapod-manifests'
      manifestTargetBranch:
        description: 'Decapod output manifests target branch name'
        required: true
        default: 'temporary_from_pr'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Run render-cd.sh
        run: |
          set -xe

          .github/workflows/render-cd.sh --base-url ${{ github.event.inputs.baseUrl }} --base-branch ${{ github.event.inputs.baseBranch }}

      - name: Pushes to the repository for argocd
        uses: cpina/github-action-push-to-another-repository@v1.3
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: 'cd'
          destination-github-username: ${{ github.event.inputs.manifestTargetUser }}
          destination-repository-name: ${{ github.event.inputs.manifestTargetRepo }}
          user-email: 'taco_support@sk.com'
          commit-message: See ORIGIN_COMMIT
          target-branch: ${{ github.event.inputs.manifestTargetBranch }}
